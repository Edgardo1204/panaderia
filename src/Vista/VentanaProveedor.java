/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Controlador.Conexion;
import Controlador.Conexion;
import static Controlador.Conexion.getConnection;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author nfswo
 */
public class VentanaProveedor extends javax.swing.JFrame {

    public Conexion conexi = new Conexion();
    public PreparedStatement ps, ps1;
    public ResultSet rs;
    public DefaultTableModel dft;
    int contador;
    int resultado;
    boolean seCumple;
    boolean existeCorreo;

    /**
     * Creates new form VentanaProveedor
     */
    public VentanaProveedor() {
        initComponents();
        this.setLocation(310, 190);
        //this.setAlwaysOnTop(true);
        this.setResizable(false);
        mostrarTabla();
        seleccionarTabla();
    }

    private void mostrarTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        rs = Conexion.getTabla("select *from proveedor");
        //se asignan los nombre de la columna
        modelo.setColumnIdentifiers(new Object[]
        {
            "Id", "Nombre", "Direccion", "Numero de telefono", "E-mail"
        });

        try
        {
            while (rs.next())
            {
                modelo.addRow(new Object[]
                {
                    rs.getString("id_proveedor"), rs.getString("nombre"), rs.getString("direccion"), rs.getString("numero_tele"), rs.getString("correo")
                });

            }
            tablaProveedores.setModel(modelo);
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        //seleccionarTabla();
    }

    private void limpiar() {
        cId.setText("");
        cNombre.setText("");
        cDireccion.setText("");
        cTelefono.setText("");
        cCorreo.setText("");
        mostrarTabla();
        buscador.setSelectedItem(null);
        cBuscar.setText("");
        tablaProveedores.setRowSelectionAllowed(false);
        botonRegistrar.setEnabled(true);

    }

    private void seleccionarTabla() {
        tablaProveedores.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                limpiar();
                int row = tablaProveedores.rowAtPoint(e.getPoint());
                cId.setText(tablaProveedores.getValueAt(row, 0).toString());
                cNombre.setText(tablaProveedores.getValueAt(row, 1).toString());
                cDireccion.setText(tablaProveedores.getValueAt(row, 2).toString());
                cTelefono.setText(tablaProveedores.getValueAt(row, 3).toString());
                cCorreo.setText(tablaProveedores.getValueAt(row, 4).toString());

                botonRegistrar.setEnabled(false);

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botonSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProveedores = new javax.swing.JTable();
        bEliminar = new javax.swing.JButton();
        botonRegistrar = new javax.swing.JButton();
        bActualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cCorreo = new javax.swing.JTextField();
        cNombre = new javax.swing.JTextField();
        cDireccion = new javax.swing.JTextField();
        cTelefono = new javax.swing.JTextField();
        bLimpiar = new javax.swing.JButton();
        cId = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        bBuscar = new javax.swing.JButton();
        buscador = new javax.swing.JComboBox<>();
        cBuscar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(236, 226, 198));

        botonSalir.setBackground(new java.awt.Color(112, 80, 48));
        botonSalir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonSalir.setForeground(new java.awt.Color(255, 255, 255));
        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setToolTipText("");

        tablaProveedores.setBackground(new java.awt.Color(255, 255, 255));
        tablaProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaProveedores.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tablaProveedores.setAutoscrolls(false);
        tablaProveedores.setRowSelectionAllowed(false);
        tablaProveedores.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tablaProveedores.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tablaProveedores);

        bEliminar.setBackground(new java.awt.Color(112, 80, 48));
        bEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bEliminar.setForeground(new java.awt.Color(255, 255, 255));
        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        botonRegistrar.setBackground(new java.awt.Color(112, 80, 48));
        botonRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botonRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        botonRegistrar.setText("Registrar");
        botonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        bActualizar.setBackground(new java.awt.Color(112, 80, 48));
        bActualizar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bActualizar.setForeground(new java.awt.Color(255, 255, 255));
        bActualizar.setText("Actualizar");
        bActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualizarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/panaderoVentana.png"))); // NOI18N
        jLabel1.setText("Registrar Proveedor");

        jLabel2.setFont(new java.awt.Font("Sitka Banner", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Dirección:");

        jLabel3.setFont(new java.awt.Font("Sitka Banner", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Id:");

        jLabel4.setFont(new java.awt.Font("Sitka Banner", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Número de telefono:");

        jLabel5.setFont(new java.awt.Font("Sitka Banner", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Correo:");

        cCorreo.setEditable(true);
        cCorreo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cCorreo.setBorder(null);
        cCorreo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cCorreoMouseMoved(evt);
            }
        });
        cCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cCorreoActionPerformed(evt);
            }
        });
        cCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cCorreoKeyTyped(evt);
            }
        });

        cNombre.setEditable(true);
        cNombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cNombre.setBorder(null);
        cNombre.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cNombreMouseMoved(evt);
            }
        });
        cNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cNombreKeyTyped(evt);
            }
        });

        cDireccion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cDireccion.setBorder(null);
        cDireccion.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                cDireccionMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cDireccionMouseMoved(evt);
            }
        });
        cDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cDireccionKeyTyped(evt);
            }
        });

        cTelefono.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cTelefono.setBorder(null);
        cTelefono.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cTelefonoMouseMoved(evt);
            }
        });
        cTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cTelefonoActionPerformed(evt);
            }
        });
        cTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cTelefonoKeyTyped(evt);
            }
        });

        bLimpiar.setBackground(new java.awt.Color(112, 80, 48));
        bLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        bLimpiar.setText("Limpiar");
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });

        cId.setEditable(true);
        cId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cId.setBorder(null);

        jLabel6.setFont(new java.awt.Font("Sitka Banner", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Nombre:");

        bBuscar.setBackground(new java.awt.Color(112, 80, 48));
        bBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bBuscar.setForeground(new java.awt.Color(255, 255, 255));
        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        buscador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "id", "Numero de telefono", "Correo" }));
        buscador.setSelectedItem(null);
        buscador.setBorder(null);

        cBuscar.setEditable(true);
        cBuscar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cBuscar.setBorder(null);
        cBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBuscarActionPerformed(evt);
            }
        });
        cBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cBuscarKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(285, 285, 285)
                        .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(buscador, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonRegistrar)
                                .addGap(44, 44, 44)
                                .addComponent(bActualizar)
                                .addGap(50, 50, 50)
                                .addComponent(bEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(bLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cId, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 22, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(botonSalir))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel6)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel4)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel3))
                            .addComponent(cId, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(cNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(cDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(cTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(cCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buscador, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cId.setEditable(false);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(null, "¿Deseas continuar?", "Confirmación", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION)
        {
            try
            {
                Conexion con = new Conexion();
                Connection conexion = con.getConnection();
                ps = conexion.prepareStatement("delete from proveedor where id_proveedor=?");
                ps.setString(1, cId.getText());
                int resultado = ps.executeUpdate();
                if (resultado > 0)
                {
                    JOptionPane.showMessageDialog(null, "Eliminacion correcta");
                    mostrarTabla();
                } else
                {
                    JOptionPane.showMessageDialog(null, "No se realizo la eliminación de los datos");
                }
                conexion.close();
            } catch (Exception e)
            {
                System.err.println(e);
            }
            limpiar();
            tablaProveedores.setRowSelectionAllowed(false);
            botonRegistrar.setEnabled(true);
        } else
        {

        }


    }//GEN-LAST:event_bEliminarActionPerformed

    private void botonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarActionPerformed
        // TODO add your handling code here:
        Pattern pattern = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        String email = cCorreo.getText();
        Matcher mather = pattern.matcher(email);
//JOptionPane.showMessageDialog(null, "El email ingresado es inválido.");
        if (cNombre.getText().isEmpty() || cDireccion.getText().isEmpty() || cTelefono.getText().isEmpty() || cCorreo.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Existe Algun Campo Vacío", "Error!", JOptionPane.ERROR_MESSAGE);
        } else if (mather.find() == true)
        {
            Connection conexion = null;
            int resultado = 0;
            boolean yaRegistrado;
            if (buscarCorreo() == false)
            {
                try
                {
                    conexion = conexi.getConnection();
                    ps = conexion.prepareStatement("insert into proveedor(nombre,direccion,numero_tele,correo)values(?,?,?,?)");
                    ps.setString(1, cNombre.getText());
                    ps.setString(2, cDireccion.getText());
                    ps.setString(3, cTelefono.getText());
                    ps.setString(4, cCorreo.getText());

                    resultado = ps.executeUpdate(); //ejecutamos la inserccion

                    if ((resultado > 0))
                    {
                        JOptionPane.showMessageDialog(null, "Datos ingresados correctamente");
                        limpiar();
                        mostrarTabla();
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "Verifique que los datos sean correctos");

                    }
                    conexion.close();

                } catch (Exception ex)
                {
                    JOptionPane.showMessageDialog(null, "Verifique los datos");
                    System.out.println(ex);
                }
                tablaProveedores.setRowSelectionAllowed(false);
                botonRegistrar.setEnabled(true);
            } else
            {
                JOptionPane.showMessageDialog(null, "El correo ya esta registrado.");

            }
        } else
        {
            JOptionPane.showMessageDialog(null, "El email ingresado es inválido.");
        }
    }//GEN-LAST:event_botonRegistrarActionPerformed

    private void bActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualizarActionPerformed
        // TODO add your handling code here:

        Pattern pattern = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        String email = cCorreo.getText();
        Matcher mather = pattern.matcher(email);

        if (mather.find() == true)
        {
            resultado = 0;
            try
            {
                Conexion con = new Conexion();
                Connection conexion = con.getConnection();
                ps = conexion.prepareStatement("update proveedor set nombre=?,direccion=?,numero_tele=?,correo=? where id_proveedor=?");

                ps.setString(1, cNombre.getText());
                ps.setString(2, cDireccion.getText());
                ps.setString(3, cTelefono.getText());
                ps.setString(4, cCorreo.getText());
                ps.setString(5, cId.getText());

                resultado = ps.executeUpdate();

                if ((resultado > 0))
                {
                    JOptionPane.showMessageDialog(null, "Datos actualizados correctamente");
                    limpiar();
                } else
                {
                    JOptionPane.showMessageDialog(null, "No fue posible actualizar los datos");
                }
                conexion.close();
            } catch (Exception e)
            {
                System.err.println(e);
            }
            mostrarTabla();
            limpiar();
            tablaProveedores.setRowSelectionAllowed(false);
            botonRegistrar.setEnabled(true);
        } else
        {

        }
    }//GEN-LAST:event_bActualizarActionPerformed

    private void cCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cCorreoActionPerformed

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_bLimpiarActionPerformed

    private void cTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cTelefonoActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo1 = new DefaultTableModel();
        Connection conexion = null;
        modelo1.setColumnIdentifiers(new Object[]
        {
            "Id", "Nombre", "Direccion", "Numero de telefono", "E-mail"
        });
        String donde = buscador.getSelectedItem().toString();
        switch (donde)
        {
            case "id":
        try
                {
                    conexion = conexi.getConnection();
                    ps = conexion.prepareStatement("select *from proveedor where id_proveedor=?");
                    ps.setString(1, cBuscar.getText());
                    rs = ps.executeQuery();
                    while (rs.next())
                    {
                        modelo1.addRow(new Object[]
                        {
                            rs.getString("id_proveedor"), rs.getString("nombre"), rs.getString("direccion"), rs.getString("numero_tele"), rs.getString("correo")
                        });

                    }
                    tablaProveedores.setModel(modelo1);
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            break;

            case "Nombre":
        try
                {
                    conexion = conexi.getConnection();
                    ps = conexion.prepareStatement("select *from proveedor where nombre=?");
                    ps.setString(1, cBuscar.getText());
                    rs = ps.executeQuery();
                    while (rs.next())
                    {
                        modelo1.addRow(new Object[]
                        {
                            rs.getString("id_proveedor"), rs.getString("nombre"), rs.getString("direccion"), rs.getString("numero_tele"), rs.getString("correo")
                        });

                    }
                    tablaProveedores.setModel(modelo1);
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            break;

            case "Dirección":
        try
                {
                    conexion = conexi.getConnection();
                    ps = conexion.prepareStatement("select *from proveedor where direccion=?");
                    ps.setString(1, cBuscar.getText());
                    rs = ps.executeQuery();
                    while (rs.next())
                    {
                        modelo1.addRow(new Object[]
                        {
                            rs.getString("id_proveedor"), rs.getString("nombre"), rs.getString("direccion"), rs.getString("numero_tele"), rs.getString("correo")
                        });

                    }
                    tablaProveedores.setModel(modelo1);
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            break;

            case "Numero de telefono":
        try
                {
                    conexion = conexi.getConnection();
                    ps = conexion.prepareStatement("select *from proveedor where numero_tele=?");
                    ps.setString(1, cBuscar.getText());
                    rs = ps.executeQuery();
                    while (rs.next())
                    {
                        modelo1.addRow(new Object[]
                        {
                            rs.getString("id_proveedor"), rs.getString("nombre"), rs.getString("direccion"), rs.getString("numero_tele"), rs.getString("correo")
                        });

                    }
                    tablaProveedores.setModel(modelo1);
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            break;

            case "Correo":
        try
                {
                    conexion = conexi.getConnection();
                    ps = conexion.prepareStatement("select *from proveedor where correo=?");
                    ps.setString(1, cBuscar.getText());
                    rs = ps.executeQuery();
                    while (rs.next())
                    {
                        modelo1.addRow(new Object[]
                        {
                            rs.getString("id_proveedor"), rs.getString("nombre"), rs.getString("direccion"), rs.getString("numero_tele"), rs.getString("correo")
                        });

                    }
                    tablaProveedores.setModel(modelo1);
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            break;

        }
    }//GEN-LAST:event_bBuscarActionPerformed
    public boolean buscarCorreo() {
        String correo = "";
        Connection conexion = null;

        try
        {
            conexion = conexi.getConnection();
            ps = conexion.prepareStatement("select *from proveedor where correo=?");
            ps.setString(1, cCorreo.getText());
            rs = ps.executeQuery();
            if (rs.next())
            {

                correo = rs.getString("correo");

            }

            if (correo.equals(cCorreo.getText()))
            {
                existeCorreo = true;

            } else
            {
                existeCorreo = false;
            }

            conexion.close();

        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        return existeCorreo;
    }
    private void cBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cBuscarActionPerformed

    private void cNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cNombreKeyTyped
        if (cNombre.getText().length() >= 30)
        {
            evt.consume();
        }
        char key = evt.getKeyChar();

        if (!Character.isLetter(key) && !(key == KeyEvent.VK_SPACE)
                && !(key == KeyEvent.VK_BACK_SPACE))
        {
            evt.consume();
        }    }//GEN-LAST:event_cNombreKeyTyped

    private void cDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cDireccionKeyTyped
        if (cDireccion.getText().length() >= 30)
        {
            evt.consume();
        }
        char key = evt.getKeyChar();

        if (!Character.isDigit(key) && !Character.isLetter(key) && !(key == KeyEvent.VK_SPACE)
                && !(key == KeyEvent.VK_BACK_SPACE))
        {
            evt.consume();
        }    // TODO add your handling code here:
     }//GEN-LAST:event_cDireccionKeyTyped

    private void cTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cTelefonoKeyTyped
        if (cTelefono.getText().length() >= 10)
        {
            evt.consume();
        }
        char key = evt.getKeyChar();

        if (!Character.isDigit(key))
        {
            evt.consume();
        }     }//GEN-LAST:event_cTelefonoKeyTyped

    private void cCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cCorreoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cCorreoKeyTyped

    private void cBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cBuscarKeyTyped
        // TODO add your handling code here:
        char key = evt.getKeyChar();
        if (cBuscar.getText().length() >= 5)
        {
            evt.consume();
        }
        if (!Character.isDigit(key))
        {
            evt.consume();
        }
    }//GEN-LAST:event_cBuscarKeyTyped

    private void cNombreMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cNombreMouseMoved
        // TODO add your handling code here:
        cNombre.setToolTipText("Campo Obligatorio");
    }//GEN-LAST:event_cNombreMouseMoved

    private void cDireccionMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cDireccionMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_cDireccionMouseDragged

    private void cDireccionMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cDireccionMouseMoved
        // TODO add your handling code here:
        cDireccion.setToolTipText("Campo Obligatorio");
    }//GEN-LAST:event_cDireccionMouseMoved

    private void cTelefonoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cTelefonoMouseMoved
        // TODO add your handling code here:
        cTelefono.setToolTipText("Campo Obligatorio");
    }//GEN-LAST:event_cTelefonoMouseMoved

    private void cCorreoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cCorreoMouseMoved
        // TODO add your handling code here:
        cCorreo.setToolTipText("Campo Obligatorio");
    }//GEN-LAST:event_cCorreoMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaProveedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bActualizar;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton botonRegistrar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JComboBox<String> buscador;
    private javax.swing.JTextField cBuscar;
    private javax.swing.JTextField cCorreo;
    private javax.swing.JTextField cDireccion;
    private javax.swing.JTextField cId;
    private javax.swing.JTextField cNombre;
    private javax.swing.JTextField cTelefono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProveedores;
    // End of variables declaration//GEN-END:variables
}
